import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  ">= 3.28.0",
	},
	"random": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/random",
		"module_address":      "",
		"name":                "random",
		"provider_config_key": "random",
		"version_constraint":  "3.0.1",
	},
}

resources = {
	"aws_instance.ubuntu": {
		"address": "aws_instance.ubuntu",
		"config": {
			"ami": {
				"references": [
					"data.aws_ami.ubuntu.id",
					"data.aws_ami.ubuntu",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"tags": {
				"references": [
					"var.instance_name",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "ubuntu",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
	"data.aws_ami.ubuntu": {
		"address": "data.aws_ami.ubuntu",
		"config": {
			"filter": [
				{
					"name": {
						"constant_value": "name",
					},
					"values": {
						"constant_value": [
							"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
						],
					},
				},
				{
					"name": {
						"constant_value": "virtualization-type",
					},
					"values": {
						"constant_value": [
							"hvm",
						],
					},
				},
			],
			"most_recent": {
				"constant_value": true,
			},
			"owners": {
				"constant_value": [
					"099720109477",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "ubuntu",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_ami",
	},
}

provisioners = {}

variables = {
	"instance_name": {
		"default":        "Provisioned by Terraform",
		"description":    "EC2 instance name",
		"module_address": "",
		"name":           "instance_name",
	},
	"instance_type": {
		"default":        "t2.micro",
		"description":    "Type of EC2 instance to provision",
		"module_address": "",
		"name":           "instance_type",
	},
	"region": {
		"default":        "us-west-1",
		"description":    "AWS region",
		"module_address": "",
		"name":           "region",
	},
}

outputs = {
	"instance_ami": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "instance_ami",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.ubuntu.ami",
				"aws_instance.ubuntu",
			],
		},
	},
	"instance_arn": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "instance_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.ubuntu.arn",
				"aws_instance.ubuntu",
			],
		},
	},
}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
